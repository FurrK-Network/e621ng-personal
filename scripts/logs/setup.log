#0 building with "default" instance using docker driver

#1 [e621 internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.89kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 1)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 11)
#1 DONE 0.1s

#2 [e621 internal] load metadata for docker.io/library/ruby:3.3.1-alpine3.19
#2 DONE 1.1s

#3 [e621 internal] load metadata for docker.io/library/node:20-alpine3.19
#3 DONE 1.1s

#4 [e621 internal] load .dockerignore
#4 transferring context: 164B done
#4 DONE 0.1s

#5 [e621 node-builder 1/5] FROM docker.io/library/node:20-alpine3.19@sha256:61e2d8da651b86774b20f244e44a5a796bb70c6b3021aa62db4f78127c906d9b
#5 resolve docker.io/library/node:20-alpine3.19@sha256:61e2d8da651b86774b20f244e44a5a796bb70c6b3021aa62db4f78127c906d9b 0.0s done
#5 ...

#6 [e621 internal] load build context
#6 transferring context: 197.79kB done
#6 DONE 0.1s

#5 [e621 node-builder 1/5] FROM docker.io/library/node:20-alpine3.19@sha256:61e2d8da651b86774b20f244e44a5a796bb70c6b3021aa62db4f78127c906d9b
#5 sha256:46b060cc26202cf98e28414d790b5cabd67094bba50315a1ae2e9daf913fca4f 0B / 3.42MB 0.2s
#5 sha256:ceeef010091836c8e6a7c43a30c29455887264fa6d7023de33835efd20bcc581 0B / 42.31MB 0.2s
#5 sha256:1be479359fed33cf097d93bd3cbcc87a29e19290d447290797dd8cd0bdf6c950 0B / 1.39MB 0.2s
#5 sha256:61e2d8da651b86774b20f244e44a5a796bb70c6b3021aa62db4f78127c906d9b 7.69kB / 7.69kB done
#5 sha256:d5dc46b7241376ddca4ec556306374d07ac976ee156f7fed5ab2ffdca09d8dd8 1.72kB / 1.72kB done
#5 sha256:22e266edd92fa3ef43f0c29f07c927f41c6d783fe9096008bf31192cb83b2859 6.38kB / 6.38kB done
#5 sha256:46b060cc26202cf98e28414d790b5cabd67094bba50315a1ae2e9daf913fca4f 3.42MB / 3.42MB 0.2s done
#5 extracting sha256:46b060cc26202cf98e28414d790b5cabd67094bba50315a1ae2e9daf913fca4f
#5 sha256:1be479359fed33cf097d93bd3cbcc87a29e19290d447290797dd8cd0bdf6c950 1.39MB / 1.39MB 0.3s done
#5 extracting sha256:46b060cc26202cf98e28414d790b5cabd67094bba50315a1ae2e9daf913fca4f 0.1s done
#5 sha256:b24ff6746ea89f43ae48baba3892bd3dfef76d93a2c5ce75497245a75b494ecd 0B / 447B 0.4s
#5 sha256:ceeef010091836c8e6a7c43a30c29455887264fa6d7023de33835efd20bcc581 6.29MB / 42.31MB 0.5s
#5 sha256:b24ff6746ea89f43ae48baba3892bd3dfef76d93a2c5ce75497245a75b494ecd 447B / 447B 0.4s done
#5 sha256:ceeef010091836c8e6a7c43a30c29455887264fa6d7023de33835efd20bcc581 12.58MB / 42.31MB 0.7s
#5 sha256:ceeef010091836c8e6a7c43a30c29455887264fa6d7023de33835efd20bcc581 16.78MB / 42.31MB 0.9s
#5 sha256:ceeef010091836c8e6a7c43a30c29455887264fa6d7023de33835efd20bcc581 19.92MB / 42.31MB 1.0s
#5 sha256:ceeef010091836c8e6a7c43a30c29455887264fa6d7023de33835efd20bcc581 23.07MB / 42.31MB 1.1s
#5 sha256:ceeef010091836c8e6a7c43a30c29455887264fa6d7023de33835efd20bcc581 30.41MB / 42.31MB 1.3s
#5 sha256:ceeef010091836c8e6a7c43a30c29455887264fa6d7023de33835efd20bcc581 33.55MB / 42.31MB 1.6s
#5 sha256:ceeef010091836c8e6a7c43a30c29455887264fa6d7023de33835efd20bcc581 37.75MB / 42.31MB 1.8s
#5 sha256:ceeef010091836c8e6a7c43a30c29455887264fa6d7023de33835efd20bcc581 42.31MB / 42.31MB 2.0s
#5 sha256:ceeef010091836c8e6a7c43a30c29455887264fa6d7023de33835efd20bcc581 42.31MB / 42.31MB 2.2s done
#5 extracting sha256:ceeef010091836c8e6a7c43a30c29455887264fa6d7023de33835efd20bcc581
#5 extracting sha256:ceeef010091836c8e6a7c43a30c29455887264fa6d7023de33835efd20bcc581 1.1s done
#5 extracting sha256:1be479359fed33cf097d93bd3cbcc87a29e19290d447290797dd8cd0bdf6c950 0.1s done
#5 extracting sha256:b24ff6746ea89f43ae48baba3892bd3dfef76d93a2c5ce75497245a75b494ecd done
#5 DONE 4.1s

#7 [e621 ruby-builder 1/4] FROM docker.io/library/ruby:3.3.1-alpine3.19@sha256:92047b87f9a122a10b22fba43ad647969a5c1ca43da663abebf5718dce1ab6a0
#7 resolve docker.io/library/ruby:3.3.1-alpine3.19@sha256:92047b87f9a122a10b22fba43ad647969a5c1ca43da663abebf5718dce1ab6a0 0.0s done
#7 sha256:92047b87f9a122a10b22fba43ad647969a5c1ca43da663abebf5718dce1ab6a0 8.98kB / 8.98kB done
#7 sha256:e4fb69bb3bad4456bd8331c885bc6ca90eb9f23719a62dff35470a6bc3a237f6 1.92kB / 1.92kB done
#7 sha256:b4f27358a0d3ad554b421ca74382c8d9e2882e68ca9718584c2c4683f350b3d5 6.34kB / 6.34kB done
#7 sha256:4abcf20661432fb2d719aaf90656f55c287f8ca915dc1c92ec14ff61e67fbaf8 3.41MB / 3.41MB 0.7s done
#7 sha256:a326d69755cdceb1ffd6ec387348908bc284de77ab6ede8e4b2d9693a59143d3 6.68MB / 6.68MB 1.2s done
#7 extracting sha256:4abcf20661432fb2d719aaf90656f55c287f8ca915dc1c92ec14ff61e67fbaf8 0.1s done
#7 sha256:e8b33b95de7eead11c61c7170d5e8f1d7e4d5ed3c8d97034fa67ae0ce977e28d 194B / 194B 0.9s done
#7 sha256:4c9bef0b9163753c041658dd72e0855fea7ba683de8fa04c4fc9e264fb7d0e30 35.95MB / 35.95MB 2.6s done
#7 extracting sha256:a326d69755cdceb1ffd6ec387348908bc284de77ab6ede8e4b2d9693a59143d3 0.5s done
#7 sha256:092ccde1c36976d1f677a1a20c671ba9eaeb64fc3c779fa49e7fe5b06bbe9387 140B / 140B 1.5s done
#7 extracting sha256:e8b33b95de7eead11c61c7170d5e8f1d7e4d5ed3c8d97034fa67ae0ce977e28d done
#7 extracting sha256:4c9bef0b9163753c041658dd72e0855fea7ba683de8fa04c4fc9e264fb7d0e30 0.9s done
#7 extracting sha256:092ccde1c36976d1f677a1a20c671ba9eaeb64fc3c779fa49e7fe5b06bbe9387 done
#7 DONE 4.2s

#8 [e621 stage-2  2/14] RUN apk --no-cache add ffmpeg vips   postgresql15-client   git jemalloc tzdata   sudo
#8 0.815 fetch https://dl-cdn.alpinelinux.org/alpine/v3.19/main/x86_64/APKINDEX.tar.gz
#8 1.226 fetch https://dl-cdn.alpinelinux.org/alpine/v3.19/community/x86_64/APKINDEX.tar.gz
#8 1.574 (1/147) Installing libSvtAv1Enc (1.7.0-r0)
#8 1.730 (2/147) Installing aom-libs (3.7.1-r0)
#8 1.915 (3/147) Installing libxau (1.0.11-r3)
#8 1.988 (4/147) Installing libmd (1.1.0-r0)
#8 2.052 (5/147) Installing libbsd (0.11.7-r3)
#8 2.116 (6/147) Installing libxdmcp (1.1.4-r3)
#8 2.176 (7/147) Installing libxcb (1.16-r0)
#8 2.245 (8/147) Installing libx11 (1.8.7-r0)
#8 2.338 (9/147) Installing hwdata-pci (0.377.2-r0)
#8 2.404 (10/147) Installing libpciaccess (0.17-r2)
#8 2.462 (11/147) Installing libdrm (2.4.118-r0)
#8 2.528 (12/147) Installing libxext (1.3.5-r3)
#8 2.593 (13/147) Installing libxfixes (6.0.1-r3)
#8 2.706 (14/147) Installing wayland-libs-client (1.22.0-r4)
#8 2.773 (15/147) Installing libva (2.20.0-r0)
#8 2.844 (16/147) Installing libvdpau (1.5-r2)
#8 2.911 (17/147) Installing onevpl-libs (2023.3.1-r2)
#8 3.543 (18/147) Installing ffmpeg-libavutil (6.1.1-r0)
#8 3.637 (19/147) Installing libdav1d (1.3.0-r1)
#8 3.830 (20/147) Installing brotli-libs (1.1.0-r1)
#8 3.938 (21/147) Installing libhwy (1.0.7-r0)
#8 3.989 (22/147) Installing lcms2 (2.15-r4)
#8 4.058 (23/147) Installing libjxl (0.8.2-r0)
#8 4.160 (24/147) Installing lame-libs (3.100-r5)
#8 ...

#9 [e621 node-builder 2/5] RUN apk --no-cache add git
#9 0.373 fetch https://dl-cdn.alpinelinux.org/alpine/v3.19/main/x86_64/APKINDEX.tar.gz
#9 0.934 fetch https://dl-cdn.alpinelinux.org/alpine/v3.19/community/x86_64/APKINDEX.tar.gz
#9 1.226 (1/10) Installing ca-certificates (20240226-r0)
#9 1.294 (2/10) Installing brotli-libs (1.1.0-r1)
#9 1.358 (3/10) Installing c-ares (1.27.0-r0)
#9 1.415 (4/10) Installing libunistring (1.1-r2)
#9 1.486 (5/10) Installing libidn2 (2.3.4-r4)
#9 1.555 (6/10) Installing nghttp2-libs (1.58.0-r0)
#9 1.615 (7/10) Installing libcurl (8.9.0-r0)
#9 1.679 (8/10) Installing libexpat (2.6.3-r0)
#9 1.761 (9/10) Installing pcre2 (10.42-r2)
#9 1.825 (10/10) Installing git (2.43.4-r0)
#9 2.019 Executing busybox-1.36.1-r19.trigger
#9 2.024 Executing ca-certificates-20240226-r0.trigger
#9 2.059 OK: 21 MiB in 27 packages
#9 DONE 4.3s

#8 [e621 stage-2  2/14] RUN apk --no-cache add ffmpeg vips   postgresql15-client   git jemalloc tzdata   sudo
#8 4.242 (25/147) Installing opus (1.4-r0)
#8 4.342 (26/147) Installing rav1e-libs (0.6.6-r2)
#8 4.489 (27/147) Installing libgomp (13.2.1_git20231014-r0)
#8 4.577 (28/147) Installing soxr (0.1.3-r7)
#8 4.634 (29/147) Installing ffmpeg-libswresample (6.1.1-r0)
#8 4.691 (30/147) Installing libogg (1.3.5-r5)
#8 4.749 (31/147) Installing libtheora (1.1.1-r18)
#8 4.818 (32/147) Installing libvorbis (1.3.7-r2)
#8 4.886 (33/147) Installing libvpx (1.13.1-r0)
#8 4.974 (34/147) Installing libsharpyuv (1.3.2-r0)
#8 5.036 (35/147) Installing libwebp (1.3.2-r0)
#8 ...

#10 [e621 node-builder 3/5] WORKDIR /app
#10 DONE 0.9s

#8 [e621 stage-2  2/14] RUN apk --no-cache add ffmpeg vips   postgresql15-client   git jemalloc tzdata   sudo
#8 5.097 (36/147) Installing libwebpmux (1.3.2-r0)
#8 5.155 (37/147) Installing x264-libs (0.164_git20231001-r0)
#8 5.238 (38/147) Installing numactl (2.0.16-r4)
#8 5.293 (39/147) Installing x265-libs (3.5-r4)
#8 5.519 (40/147) Installing xvidcore (1.3.7-r2)
#8 5.635 (41/147) Installing ffmpeg-libavcodec (6.1.1-r0)
#8 6.131 (42/147) Installing sdl2 (2.28.5-r0)
#8 ...

#11 [e621 node-builder 4/5] COPY package.json yarn.lock ./
#11 DONE 1.2s

#8 [e621 stage-2  2/14] RUN apk --no-cache add ffmpeg vips   postgresql15-client   git jemalloc tzdata   sudo
#8 6.203 (43/147) Installing alsa-lib (1.2.10-r0)
#8 6.273 (44/147) Installing libexpat (2.6.3-r0)
#8 6.331 (45/147) Installing libbz2 (1.0.8-r6)
#8 6.390 (46/147) Installing libpng (1.6.40-r0)
#8 6.468 (47/147) Installing freetype (2.13.2-r0)
#8 6.531 (48/147) Installing fontconfig (2.14.2-r4)
#8 6.602 (49/147) Installing fribidi (1.0.13-r0)
#8 6.657 (50/147) Installing libblkid (2.39.3-r0)
#8 6.718 (51/147) Installing libmount (2.39.3-r0)
#8 6.777 (52/147) Installing pcre2 (10.42-r2)
#8 6.841 (53/147) Installing glib (2.78.6-r0)
#8 6.928 (54/147) Installing graphite2 (1.3.14-r6)
#8 6.985 (55/147) Installing harfbuzz (8.3.0-r0)
#8 7.063 (56/147) Installing libunibreak (5.1-r3)
#8 7.119 (57/147) Installing libass (0.17.1-r1)
#8 7.183 (58/147) Installing libbluray (1.3.4-r1)
#8 7.249 (59/147) Installing mpg123-libs (1.32.3-r0)
#8 7.315 (60/147) Installing libopenmpt (0.7.3-r1)
#8 7.377 (61/147) Installing cjson (1.7.17-r0)
#8 7.435 (62/147) Installing mbedtls (2.28.9-r0)
#8 7.510 (63/147) Installing librist (0.2.10-r0)
#8 7.567 (64/147) Installing libsrt (1.5.3-r0)
#8 7.637 (65/147) Installing libssh (0.10.6-r0)
#8 7.696 (66/147) Installing xz-libs (5.4.5-r0)
#8 7.760 (67/147) Installing libxml2 (2.11.8-r0)
#8 7.832 (68/147) Installing libsodium (1.0.19-r0)
#8 7.930 (69/147) Installing libzmq (4.3.5-r2)
#8 8.100 (70/147) Installing ffmpeg-libavformat (6.1.1-r0)
#8 8.223 (71/147) Installing serd-libs (0.32.0-r0)
#8 8.288 (72/147) Installing zix-libs (0.4.2-r0)
#8 8.348 (73/147) Installing sord-libs (0.16.16-r0)
#8 8.409 (74/147) Installing sratom (0.6.16-r0)
#8 8.470 (75/147) Installing lilv-libs (0.24.22-r0)
#8 8.556 (76/147) Installing glslang-libs (1.3.261.1-r0)
#8 8.656 (77/147) Installing libdovi (3.2.0-r1)
#8 8.721 (78/147) Installing spirv-tools (1.3.261.1-r0)
#8 8.812 (79/147) Installing shaderc (2023.7-r0)
#8 8.871 (80/147) Installing vulkan-loader (1.3.261.1-r0)
#8 8.936 (81/147) Installing libplacebo (6.338.1-r0)
#8 9.007 (82/147) Installing ffmpeg-libpostproc (6.1.1-r0)
#8 9.063 (83/147) Installing ffmpeg-libswscale (6.1.1-r0)
#8 9.125 (84/147) Installing vidstab (1.1.1-r0)
#8 9.185 (85/147) Installing zimg (3.0.5-r2)
#8 9.248 (86/147) Installing ffmpeg-libavfilter (6.1.1-r0)
#8 9.349 (87/147) Installing libasyncns (0.8-r2)
#8 9.411 (88/147) Installing dbus-libs (1.14.10-r0)
#8 9.485 (89/147) Installing libltdl (2.4.7-r3)
#8 9.547 (90/147) Installing orc (0.4.34-r0)
#8 9.610 (91/147) Installing libflac (1.4.3-r1)
#8 9.674 (92/147) Installing libsndfile (1.2.2-r0)
#8 9.737 (93/147) Installing speexdsp (1.2.1-r2)
#8 9.796 (94/147) Installing tdb-libs (1.4.9-r0)
#8 9.853 (95/147) Installing libpulse (16.1-r11)
#8 9.929 (96/147) Installing libjpeg-turbo (3.0.1-r0)
#8 10.05 (97/147) Installing v4l-utils-libs (1.24.1-r1)
#8 ...

#12 [e621 ruby-builder 2/4] RUN apk --no-cache add build-base cmake git glib-dev postgresql15-dev
#12 0.813 fetch https://dl-cdn.alpinelinux.org/alpine/v3.19/main/x86_64/APKINDEX.tar.gz
#12 1.171 fetch https://dl-cdn.alpinelinux.org/alpine/v3.19/community/x86_64/APKINDEX.tar.gz
#12 1.551 (1/97) Upgrading libcrypto3 (3.1.4-r6 -> 3.1.7-r0)
#12 1.646 (2/97) Upgrading libssl3 (3.1.4-r6 -> 3.1.7-r0)
#12 1.720 (3/97) Installing jansson (2.14-r4)
#12 1.780 (4/97) Installing zstd-libs (1.5.5-r8)
#12 1.901 (5/97) Installing binutils (2.41-r0)
#12 2.037 (6/97) Installing libmagic (5.45-r1)
#12 2.110 (7/97) Installing file (5.45-r1)
#12 2.175 (8/97) Installing libgomp (13.2.1_git20231014-r0)
#12 2.239 (9/97) Installing libatomic (13.2.1_git20231014-r0)
#12 2.298 (10/97) Installing isl26 (0.26-r1)
#12 2.375 (11/97) Installing mpfr4 (4.2.1-r0)
#12 2.440 (12/97) Installing mpc1 (1.3.1-r1)
#12 2.497 (13/97) Installing gcc (13.2.1_git20231014-r0)
#12 3.768 (14/97) Installing libstdc++-dev (13.2.1_git20231014-r0)
#12 3.954 (15/97) Installing musl-dev (1.2.4_git20230717-r4)
#12 4.080 (16/97) Installing libc-dev (0.7.2-r5)
#12 4.138 (17/97) Installing g++ (13.2.1_git20231014-r0)
#12 4.565 (18/97) Installing make (4.4.1-r2)
#12 4.627 (19/97) Installing fortify-headers (1.1-r3)
#12 4.680 (20/97) Installing patch (2.7.6-r10)
#12 4.740 (21/97) Installing build-base (0.5-r3)
#12 4.790 (22/97) Installing libacl (2.3.1-r4)
#12 4.845 (23/97) Installing libbz2 (1.0.8-r6)
#12 4.902 (24/97) Installing libexpat (2.6.3-r0)
#12 4.957 (25/97) Installing lz4-libs (1.9.4-r5)
#12 5.011 (26/97) Installing xz-libs (5.4.5-r0)
#12 5.073 (27/97) Installing libarchive (3.7.4-r0)
#12 5.137 (28/97) Installing nghttp2-libs (1.58.0-r0)
#12 5.191 (29/97) Installing rhash-libs (1.4.4-r0)
#12 5.248 (30/97) Installing libuv (1.47.0-r0)
#12 5.305 (31/97) Installing cmake (3.27.8-r0)
#12 5.921 (32/97) Installing brotli-libs (1.1.0-r1)
#12 6.036 (33/97) Installing c-ares (1.27.0-r0)
#12 6.098 (34/97) Installing libunistring (1.1-r2)
#12 6.171 (35/97) Installing libidn2 (2.3.4-r4)
#12 6.224 (36/97) Installing libcurl (8.9.0-r0)
#12 6.287 (37/97) Installing pcre2 (10.42-r2)
#12 6.353 (38/97) Installing git (2.43.4-r0)
#12 6.468 (39/97) Installing bzip2-dev (1.0.8-r6)
#12 6.525 (40/97) Installing libxml2 (2.11.8-r0)
#12 6.595 (41/97) Installing libxml2-utils (2.11.8-r0)
#12 6.654 (42/97) Installing docbook-xml (4.5-r8)
#12 6.726 Executing docbook-xml-4.5-r8.post-install
#12 6.731 (43/97) Installing libgpg-error (1.47-r2)
#12 6.795 (44/97) Installing libgcrypt (1.10.3-r0)
#12 6.862 (45/97) Installing libxslt (1.1.39-r0)
#12 6.926 (46/97) Installing docbook-xsl (1.79.2-r8)
#12 7.108 Executing docbook-xsl-1.79.2-r8.post-install
#12 7.117 (47/97) Installing xz (5.4.5-r0)
#12 7.182 (48/97) Installing gettext-asprintf (0.22.3-r0)
#12 7.237 (49/97) Installing gettext-libs (0.22.3-r0)
#12 7.307 (50/97) Installing gettext-envsubst (0.22.3-r0)
#12 7.361 (51/97) Installing gettext (0.22.3-r0)
#12 7.432 (52/97) Installing gettext-dev (0.22.3-r0)
#12 7.510 (53/97) Installing gdbm (1.23-r1)
#12 7.565 (54/97) Installing mpdecimal (2.5.1-r2)
#12 7.630 (55/97) Installing libpanelw (6.4_p20231125-r0)
#12 7.681 (56/97) Installing readline (8.2.1-r2)
#12 7.740 (57/97) Installing sqlite-libs (3.44.2-r0)
#12 7.813 (58/97) Installing python3 (3.11.9-r1)
#12 8.076 (59/97) Installing python3-pycache-pyc0 (3.11.9-r1)
#12 8.252 (60/97) Installing pyc (3.11.9-r1)
#12 8.304 (61/97) Installing python3-pyc (3.11.9-r1)
#12 8.356 (62/97) Installing libblkid (2.39.3-r0)
#12 8.417 (63/97) Installing libmount (2.39.3-r0)
#12 8.494 (64/97) Installing glib (2.78.6-r0)
#12 8.593 (65/97) Installing bsd-compat-headers (0.7.2-r5)
#12 8.657 (66/97) Installing libformw (6.4_p20231125-r0)
#12 8.715 (67/97) Installing libmenuw (6.4_p20231125-r0)
#12 8.776 (68/97) Installing libncurses++ (6.4_p20231125-r0)
#12 8.834 (69/97) Installing ncurses-dev (6.4_p20231125-r0)
#12 8.896 (70/97) Installing libedit (20230828.3.1-r3)
#12 8.955 (71/97) Installing libedit-dev (20230828.3.1-r3)
#12 9.011 (72/97) Installing libpcre2-16 (10.42-r2)
#12 9.073 (73/97) Installing libpcre2-32 (10.42-r2)
#12 9.137 (74/97) Installing pcre2-dev (10.42-r2)
#12 9.213 (75/97) Installing libuuid (2.39.3-r0)
#12 9.270 (76/97) Installing libfdisk (2.39.3-r0)
#12 9.336 (77/97) Installing libsmartcols (2.39.3-r0)
#12 9.395 (78/97) Installing util-linux-dev (2.39.3-r0)
#12 9.452 (79/97) Installing glib-dev (2.78.6-r0)
#12 9.548 (80/97) Installing libpq (16.3-r0)
#12 9.612 (81/97) Installing openssl-dev (3.1.7-r0)
#12 9.691 (82/97) Installing libpq-dev (16.3-r0)
#12 9.764 (83/97) Installing libecpg (16.3-r0)
#12 9.822 (84/97) Installing libecpg-dev (16.3-r0)
#12 9.887 (85/97) Installing llvm14-libs (14.0.6-r17)
#12 ...

#8 [e621 stage-2  2/14] RUN apk --no-cache add ffmpeg vips   postgresql15-client   git jemalloc tzdata   sudo
#8 10.13 (98/147) Installing ffmpeg-libavdevice (6.1.1-r0)
#8 10.34 (99/147) Installing ffmpeg (6.1.1-r0)
#8 10.60 (100/147) Installing c-ares (1.27.0-r0)
#8 10.68 (101/147) Installing libunistring (1.1-r2)
#8 11.01 (102/147) Installing libidn2 (2.3.4-r4)
#8 11.08 (103/147) Installing nghttp2-libs (1.58.0-r0)
#8 11.15 (104/147) Installing libcurl (8.9.0-r0)
#8 11.30 (105/147) Installing git (2.43.4-r0)
#8 11.58 (106/147) Installing jemalloc (5.3.0-r4)
#8 11.94 (107/147) Installing postgresql-common (1.2-r1)
#8 12.00 Executing postgresql-common-1.2-r1.pre-install
#8 12.03 (108/147) Installing lz4-libs (1.9.4-r5)
#8 12.10 (109/147) Installing libpq (16.3-r0)
#8 12.16 (110/147) Installing readline (8.2.1-r2)
#8 12.22 (111/147) Installing zstd-libs (1.5.5-r8)
#8 12.30 (112/147) Installing postgresql15-client (15.7-r0)
#8 12.39 (113/147) Installing sudo (1.9.15_p2-r0)
#8 12.47 (114/147) Installing tzdata (2024a-r0)
#8 12.63 (115/147) Installing openexr-libiex (3.1.12-r0)
#8 12.70 (116/147) Installing openexr-libilmthread (3.1.12-r0)
#8 12.78 (117/147) Installing gdbm (1.23-r1)
#8 12.84 (118/147) Installing mpdecimal (2.5.1-r2)
#8 12.92 (119/147) Installing libpanelw (6.4_p20231125-r0)
#8 12.97 (120/147) Installing sqlite-libs (3.44.2-r0)
#8 13.13 (121/147) Installing python3 (3.11.9-r1)
#8 13.48 (122/147) Installing python3-pycache-pyc0 (3.11.9-r1)
#8 13.76 (123/147) Installing pyc (3.11.9-r1)
#8 13.81 (124/147) Installing python3-pyc (3.11.9-r1)
#8 13.87 (125/147) Installing boost1.82-python3 (1.82.0-r3)
#8 13.92 (126/147) Installing imath (3.1.9-r3)
#8 14.09 (127/147) Installing openexr-libopenexr (3.1.12-r0)
#8 14.17 (128/147) Installing libxrender (0.9.11-r4)
#8 14.23 (129/147) Installing pixman (0.42.2-r2)
#8 14.29 (130/147) Installing cairo (1.18.0-r0)
#8 14.35 (131/147) Installing cfitsio (4.3.1-r0)
#8 14.42 (132/147) Installing cgif (0.3.2-r0)
#8 14.73 (133/147) Installing libexif (0.6.24-r2)
#8 14.79 (134/147) Installing fftw-double-libs (3.3.10-r5)
#8 14.86 (135/147) Installing libimagequant (4.2.2-r0)
#8 14.92 (136/147) Installing openjpeg (2.5.0-r3)
#8 14.98 (137/147) Installing libxft (2.3.8-r2)
#8 15.04 (138/147) Installing pango (1.51.0-r0)
#8 15.10 (139/147) Installing cairo-gobject (1.18.0-r0)
#8 15.16 (140/147) Installing shared-mime-info (2.4-r0)
#8 15.24 (141/147) Installing tiff (4.6.0-r0)
#8 15.30 (142/147) Installing gdk-pixbuf (2.42.10-r6)
#8 15.36 (143/147) Installing librsvg (2.57.1-r0)
#8 15.44 (144/147) Installing libspng (0.7.4-r0)
#8 15.50 (145/147) Installing libwebpdemux (1.3.2-r0)
#8 15.55 (146/147) Installing vips (8.15.0-r0)
#8 15.64 (147/147) Installing vips-jxl (8.15.0-r0)
#8 15.69 Executing busybox-1.36.1-r15.trigger
#8 15.70 Executing glib-2.78.6-r0.trigger
#8 15.70 Executing postgresql-common-1.2-r1.trigger
#8 15.70 * Setting postgresql15 as the default version
#8 15.77 WARNING: opening from cache https://dl-cdn.alpinelinux.org/alpine/v3.19/main: No such file or directory
#8 15.77 WARNING: opening from cache https://dl-cdn.alpinelinux.org/alpine/v3.19/community: No such file or directory
#8 15.77 Executing shared-mime-info-2.4-r0.trigger
#8 16.21 Executing gdk-pixbuf-2.42.10-r6.trigger
#8 16.26 OK: 239 MiB in 182 packages
#8 ...

#13 [e621 node-builder 5/5] RUN corepack enable && corepack prepare --activate && yarn install
#13 0.456 Preparing yarn@1.22.19 for immediate activation...
#13 1.461 yarn install v1.22.19
#13 1.513 [1/4] Resolving packages...
#13 1.712 [2/4] Fetching packages...
#13 ...

#12 [e621 ruby-builder 2/4] RUN apk --no-cache add build-base cmake git glib-dev postgresql15-dev
#12 11.01 (86/97) Installing clang14-libs (14.0.6-r7)
#12 11.48 (87/97) Installing clang14-libclang (14.0.6-r7)
#12 12.01 (88/97) Installing clang14 (14.0.6-r7)
#12 12.13 (89/97) Installing icu-data-en (74.1-r0)
#12 12.21 Executing icu-data-en-74.1-r0.post-install
#12 12.21 *
#12 12.21 * If you need ICU with non-English locales and legacy charset support, install
#12 12.21 * package icu-data-full.
#12 12.21 *
#12 12.21 (90/97) Installing icu-libs (74.1-r0)
#12 12.30 (91/97) Installing icu (74.1-r0)
#12 12.36 (92/97) Installing icu-dev (74.1-r0)
#12 12.45 (93/97) Installing llvm14 (14.0.6-r17)
#12 12.96 (94/97) Installing lz4-dev (1.9.4-r5)
#12 13.02 (95/97) Installing zstd (1.5.5-r8)
#12 13.15 (96/97) Installing zstd-dev (1.5.5-r8)
#12 13.21 (97/97) Installing postgresql15-dev (15.7-r0)
#12 13.39 Executing busybox-1.36.1-r15.trigger
#12 13.39 Executing ca-certificates-20240226-r0.trigger
#12 13.42 Executing glib-2.78.6-r0.trigger
#12 13.42 No schema files found: doing nothing.
#12 13.43 OK: 680 MiB in 130 packages
#12 DONE 17.9s

#13 [e621 node-builder 5/5] RUN corepack enable && corepack prepare --activate && yarn install
#13 ...

#8 [e621 stage-2  2/14] RUN apk --no-cache add ffmpeg vips   postgresql15-client   git jemalloc tzdata   sudo
#8 DONE 18.0s

#14 [e621 ruby-builder 3/4] COPY Gemfile Gemfile.lock ./
#14 DONE 0.2s

#15 [e621 stage-2  3/14] WORKDIR /app
#15 DONE 0.2s

#16 [e621 ruby-builder 4/4] RUN gem i foreman && BUNDLE_IGNORE_CONFIG=true bundle install -j$(nproc)  && rm -rf /usr/local/bundle/cache/*.gem  && find /usr/local/bundle/gems/ -name "*.c" -delete  && find /usr/local/bundle/gems/ -name "*.o" -delete
#16 1.279 Successfully installed foreman-0.88.1
#16 1.279 1 gem installed
#16 1.416 Bundler 2.5.9 is running, but your lockfile was generated with 2.4.10. Installing Bundler 2.4.10 and restarting using that version.
#16 2.693 Fetching gem metadata from https://rubygems.org/.
#16 2.768 Fetching bundler 2.4.10
#16 3.116 Installing bundler 2.4.10
#16 4.233 Fetching gem metadata from https://rubygems.org/....
#16 ...

#13 [e621 node-builder 5/5] RUN corepack enable && corepack prepare --activate && yarn install
#13 13.46 [3/4] Linking dependencies...
#13 16.61 [4/4] Building fresh packages...
#13 16.96 Done in 15.50s.
#13 DONE 17.7s

#16 [e621 ruby-builder 4/4] RUN gem i foreman && BUNDLE_IGNORE_CONFIG=true bundle install -j$(nproc)  && rm -rf /usr/local/bundle/cache/*.gem  && find /usr/local/bundle/gems/ -name "*.c" -delete  && find /usr/local/bundle/gems/ -name "*.o" -delete
#16 4.233 Fetching gem metadata from https://rubygems.org/........
#16 7.025 Fetching https://github.com/e621ng/dtext_rb.git
#16 ...

#17 [e621 stage-2  4/14] COPY --from=node-builder /usr/lib /usr/lib
#17 DONE 0.3s

#18 [e621 stage-2  5/14] COPY --from=node-builder /usr/local/share /usr/local/share
#18 DONE 2.9s

#16 [e621 ruby-builder 4/4] RUN gem i foreman && BUNDLE_IGNORE_CONFIG=true bundle install -j$(nproc)  && rm -rf /usr/local/bundle/cache/*.gem  && find /usr/local/bundle/gems/ -name "*.c" -delete  && find /usr/local/bundle/gems/ -name "*.o" -delete
#16 9.834 Fetching rake 13.2.1
#16 10.14 Installing rake 13.2.1
#16 10.17 Using base64 0.2.0
#16 10.17 Using mutex_m 0.2.0
#16 10.17 Using timeout 0.4.1
#16 10.17 Using date 3.3.4
#16 10.17 Using racc 1.7.3
#16 10.18 Fetching bigdecimal 3.1.7
#16 10.18 Fetching concurrent-ruby 1.2.3
#16 10.18 Fetching connection_pool 2.4.1
#16 10.18 Fetching drb 2.2.1
#16 10.18 Fetching minitest 5.22.3
#16 10.18 Fetching builder 3.2.4
#16 10.18 Fetching erubi 1.12.0
#16 10.18 Using bundler 2.4.10
#16 10.18 Fetching crass 1.0.6
#16 10.18 Fetching rack 3.0.11
#16 10.18 Fetching nio4r 2.7.1
#16 10.18 Fetching websocket-extensions 0.1.5
#16 10.18 Fetching zeitwerk 2.6.13
#16 10.18 Fetching marcel 1.0.4
#16 10.18 Fetching mini_mime 1.1.5
#16 10.18 Fetching jsonapi-renderer 0.2.2
#16 10.18 Fetching public_suffix 5.0.5
#16 10.18 Fetching ast 2.4.2
#16 10.18 Fetching bcrypt 3.1.20
#16 10.18 Fetching smart_properties 1.17.0
#16 10.18 Fetching msgpack 1.7.2
#16 10.18 Fetching strscan 3.1.0
#16 10.18 Fetching dalli 3.2.8
#16 10.56 Fetching debase-ruby_core_source 3.3.1
#16 10.58 Fetching libdatadog 7.0.0.1.0 (x86_64-linux)
#16 10.74 Installing connection_pool 2.4.1
#16 10.74 Installing strscan 3.1.0 with native extensions
#16 10.75 Installing erubi 1.12.0
#16 10.76 Installing websocket-extensions 0.1.5
#16 10.76 Installing crass 1.0.6
#16 10.77 Installing jsonapi-renderer 0.2.2
#16 10.77 Installing drb 2.2.1
#16 10.77 Installing ast 2.4.2
#16 10.78 Installing builder 3.2.4
#16 10.78 Installing dalli 3.2.8
#16 10.80 Installing zeitwerk 2.6.13
#16 10.80 Installing mini_mime 1.1.5
#16 10.81 Installing marcel 1.0.4
#16 10.81 Installing bcrypt 3.1.20 with native extensions
#16 10.82 Installing smart_properties 1.17.0
#16 10.86 Installing minitest 5.22.3
#16 10.87 Using stringio 3.1.0
#16 10.87 Installing rack 3.0.11
#16 10.88 Fetching ffi 1.16.3
#16 10.88 Fetching io-console 0.7.2
#16 10.88 Installing public_suffix 5.0.5
#16 10.92 Fetching diffy 3.4.2
#16 10.95 Installing nio4r 2.7.1 with native extensions
#16 10.97 Fetching domain_name 0.6.20240107
#16 10.98 Fetching dotenv 3.1.0
#16 11.00 Installing msgpack 1.7.2 with native extensions
#16 11.07 Using ruby2_keywords 0.0.5
#16 11.08 Using dtext_rb 1.11.0 from https://github.com/e621ng/dtext_rb.git (at master@5ef8fd7)
#16 11.16 Installing bigdecimal 3.1.7 with native extensions
#16 11.20 Fetching webrick 1.8.1
#16 11.21 Fetching thor 1.3.1
#16 11.27 Installing io-console 0.7.2 with native extensions
#16 11.30 Installing diffy 3.4.2
#16 11.32 Installing dotenv 3.1.0
#16 11.36 Using uri 0.13.0
#16 11.36 Fetching hashdiff 1.1.0
#16 11.40 Fetching http-accept 1.7.0
#16 ...

#19 [e621 stage-2  6/14] COPY --from=node-builder /usr/local/lib /usr/local/lib
#19 DONE 0.5s

#16 [e621 ruby-builder 4/4] RUN gem i foreman && BUNDLE_IGNORE_CONFIG=true bundle install -j$(nproc)  && rm -rf /usr/local/bundle/cache/*.gem  && find /usr/local/bundle/gems/ -name "*.c" -delete  && find /usr/local/bundle/gems/ -name "*.o" -delete
#16 11.46 Installing concurrent-ruby 1.2.3
#16 11.52 Fetching json 2.7.2
#16 ...

#20 [e621 stage-2  7/14] COPY --from=node-builder /usr/local/include /usr/local/include
#20 DONE 0.2s

#16 [e621 ruby-builder 4/4] RUN gem i foreman && BUNDLE_IGNORE_CONFIG=true bundle install -j$(nproc)  && rm -rf /usr/local/bundle/cache/*.gem  && find /usr/local/bundle/gems/ -name "*.c" -delete  && find /usr/local/bundle/gems/ -name "*.o" -delete
#16 11.60 Installing thor 1.3.1
#16 11.60 Installing webrick 1.8.1
#16 11.64 Fetching language_server-protocol 3.17.0.3
#16 11.67 Installing hashdiff 1.1.0
#16 11.68 Fetching rb-fsevent 0.11.2
#16 11.70 Installing domain_name 0.6.20240107
#16 11.70 Installing http-accept 1.7.0
#16 11.72 Using logger 1.6.0
#16 11.72 Fetching mime-types-data 3.2024.0305
#16 11.77 Fetching netrc 0.11.0
#16 11.82 Installing json 2.7.2 with native extensions
#16 11.84 Fetching multi_json 1.15.0
#16 11.87 Fetching parallel 1.24.0
#16 12.01 Installing netrc 0.11.0
#16 12.06 Installing language_server-protocol 3.17.0.3
#16 12.06 Installing rb-fsevent 0.11.2
#16 12.08 Fetching pg 1.5.6
#16 12.13 Installing multi_json 1.15.0
#16 12.17 Fetching raindrops 0.20.1
#16 12.20 Installing parallel 1.24.0
#16 12.21 Fetching prism 0.30.0
#16 12.25 Installing mime-types-data 3.2024.0305
#16 ...

#21 [e621 stage-2  8/14] COPY --from=node-builder /usr/local/bin /usr/local/bin
#21 DONE 0.7s

#16 [e621 ruby-builder 4/4] RUN gem i foreman && BUNDLE_IGNORE_CONFIG=true bundle install -j$(nproc)  && rm -rf /usr/local/bundle/cache/*.gem  && find /usr/local/bundle/gems/ -name "*.c" -delete  && find /usr/local/bundle/gems/ -name "*.o" -delete
#16 12.27 Fetching rainbow 3.1.1
#16 12.30 Fetching recaptcha 5.16.0
#16 12.33 Fetching regexp_parser 2.9.0
#16 12.33 Fetching ruby-progressbar 1.13.0
#16 12.42 Fetching unicode-display_width 2.5.0
#16 ...

#22 [e621 stage-2  9/14] COPY --from=node-builder /root/.cache/node /root/.cache/node
#22 DONE 0.2s

#16 [e621 ruby-builder 4/4] RUN gem i foreman && BUNDLE_IGNORE_CONFIG=true bundle install -j$(nproc)  && rm -rf /usr/local/bundle/cache/*.gem  && find /usr/local/bundle/gems/ -name "*.c" -delete  && find /usr/local/bundle/gems/ -name "*.o" -delete
#16 12.51 Installing rainbow 3.1.1
#16 12.52 Installing raindrops 0.20.1 with native extensions
#16 12.53 Installing recaptcha 5.16.0
#16 12.57 Fetching sorbet-runtime 0.5.11361
#16 12.57 Fetching rugged 1.7.2
#16 12.64 Fetching semantic_range 3.0.0
#16 ...

#23 [e621 stage-2 10/14] COPY --from=node-builder /root/.cache/node /home/e621ng/.cache/node
#23 DONE 0.1s

#16 [e621 ruby-builder 4/4] RUN gem i foreman && BUNDLE_IGNORE_CONFIG=true bundle install -j$(nproc)  && rm -rf /usr/local/bundle/cache/*.gem  && find /usr/local/bundle/gems/ -name "*.c" -delete  && find /usr/local/bundle/gems/ -name "*.o" -delete
#16 12.71 Fetching shoulda-context 2.0.0
#16 12.71 Installing ruby-progressbar 1.13.0
#16 12.71 Installing unicode-display_width 2.5.0
#16 12.75 Installing regexp_parser 2.9.0
#16 12.80 Installing pg 1.5.6 with native extensions
#16 12.82 Fetching nokogiri 1.16.4 (x86_64-linux)
#16 12.86 Using net-protocol 0.2.2
#16 12.87 Fetching websocket-driver 0.7.6
#16 12.90 Using psych 5.1.2
#16 12.90 Fetching redis-client 0.22.1
#16 12.91 Installing semantic_range 3.0.0
#16 12.97 Installing sorbet-runtime 0.5.11361
#16 12.98 Installing shoulda-context 2.0.0
#16 12.99 Installing ffi 1.16.3 with native extensions
#16 13.04 Fetching parser 3.3.1.0
#16 13.11 Installing websocket-driver 0.7.6 with native extensions
#16 13.12 Installing redis-client 0.22.1
#16 13.12 Fetching mocha 2.2.0
#16 13.29 Using net-http 0.4.1
#16 13.30 Fetching addressable 2.8.6
#16 13.41 Installing prism 0.30.0 with native extensions
#16 13.44 Installing mocha 2.2.0
#16 13.52 Fetching rbs 3.5.3
#16 13.64 Installing addressable 2.8.6
#16 13.93 Fetching rack-session 2.0.0
#16 14.06 Fetching rack-test 2.1.0
#16 14.12 Fetching request_store 1.7.0
#16 14.15 Installing rack-session 2.0.0
#16 14.22 Fetching rack-proxy 0.7.7
#16 14.30 Installing rack-test 2.1.0
#16 14.30 Fetching http-cookie 1.0.5
#16 14.34 Fetching rackup 2.1.0
#16 14.34 Installing request_store 1.7.0
#16 14.39 Fetching streamio-ffmpeg 3.0.2
#16 14.45 Installing rack-proxy 0.7.7
#16 14.47 Fetching rexml 3.3.6
#16 14.56 Installing rackup 2.1.0
#16 14.56 Installing http-cookie 1.0.5
#16 14.57 Fetching net-imap 0.4.10
#16 14.57 Using net-pop 0.1.2
#16 14.60 Fetching net-smtp 0.5.0
#16 14.64 Installing streamio-ffmpeg 3.0.2
#16 14.67 Installing parser 3.3.1.0
#16 14.72 Using rdoc 6.6.3.1
#16 14.73 Fetching mime-types 3.5.2
#16 14.79 Fetching faraday-net_http 3.1.0
#16 14.79 Fetching redis 5.2.0
#16 14.86 Installing net-smtp 0.5.0
#16 14.87 Installing rexml 3.3.6
#16 14.88 Fetching i18n 1.14.4
#16 14.94 Fetching tzinfo 2.0.6
#16 14.96 Installing mime-types 3.5.2
#16 14.98 Installing faraday-net_http 3.1.0
#16 14.99 Installing net-imap 0.4.10
#16 15.00 Fetching sidekiq 7.2.4
#16 15.06 Installing redis 5.2.0
#16 15.06 Installing rbs 3.5.3 with native extensions
#16 15.10 Fetching reline 0.5.3
#16 15.13 Installing i18n 1.14.4
#16 15.20 Installing rugged 1.7.2 with native extensions
#16 15.22 Installing tzinfo 2.0.6
#16 15.29 Fetching faraday 2.9.0
#16 15.36 Fetching rest-client 2.1.0
#16 15.40 Installing reline 0.5.3
#16 15.53 Installing sidekiq 7.2.4
#16 15.71 Fetching faker 3.4.2
#16 ...

#24 [e621 stage-2 11/14] COPY --from=node-builder /app/node_modules node_modules
#24 DONE 3.2s

#16 [e621 ruby-builder 4/4] RUN gem i foreman && BUNDLE_IGNORE_CONFIG=true bundle install -j$(nproc)  && rm -rf /usr/local/bundle/cache/*.gem  && find /usr/local/bundle/gems/ -name "*.c" -delete  && find /usr/local/bundle/gems/ -name "*.o" -delete
#16 15.71 Installing faraday 2.9.0
#16 15.75 Installing rest-client 2.1.0
#16 15.78 Fetching mail 2.8.1
#16 15.80 Fetching irb 1.12.0
#16 16.14 Installing irb 1.12.0
#16 16.27 Installing debase-ruby_core_source 3.3.1
#16 16.32 Fetching puma 6.4.2
#16 16.39 Fetching mailgun-ruby 1.2.14
#16 16.42 Installing mail 2.8.1
#16 16.43 Fetching faraday-follow_redirects 0.3.0
#16 16.43 Fetching faraday-retry 2.2.1
#16 16.43 Fetching opensearch-ruby 3.2.0
#16 16.64 Installing faraday-follow_redirects 0.3.0
#16 16.67 Installing faraday-retry 2.2.1
#16 16.97 Installing opensearch-ruby 3.2.0
#16 16.98 Installing puma 6.4.2 with native extensions
#16 16.98 Installing mailgun-ruby 1.2.14
#16 17.04 Installing libdatadog 7.0.0.1.0 (x86_64-linux)
#16 17.06 Fetching debug 1.9.2
#16 17.13 Fetching sidekiq-unique-jobs 8.0.10
#16 17.22 Fetching rubocop-ast 1.31.2
#16 17.37 Installing debug 1.9.2 with native extensions
#16 17.37 Installing nokogiri 1.16.4 (x86_64-linux)
#16 17.42 Installing sidekiq-unique-jobs 8.0.10
#16 17.47 Installing rubocop-ast 1.31.2
#16 17.53 Installing faker 3.4.2
#16 18.07 Fetching rubocop 1.63.4
#16 18.15 Fetching bootsnap 1.18.3
#16 18.41 Installing bootsnap 1.18.3 with native extensions
#16 18.63 Installing rubocop 1.63.4
#16 20.10 Fetching loofah 2.22.0
#16 20.29 Installing loofah 2.22.0
#16 20.33 Fetching rails-html-sanitizer 1.6.0
#16 20.49 Installing rails-html-sanitizer 1.6.0
#16 22.92 Fetching pitchfork 0.13.0
#16 23.14 Installing pitchfork 0.13.0 with native extensions
#16 23.27 Fetching activesupport 7.1.3.2
#16 23.27 Fetching crack 1.0.0
#16 23.45 Installing crack 1.0.0
#16 23.46 Fetching webmock 3.23.0
#16 23.58 Installing activesupport 7.1.3.2
#16 23.64 Fetching rails-dom-testing 2.2.0
#16 23.64 Fetching globalid 1.2.1
#16 23.64 Fetching activemodel 7.1.3.2
#16 23.64 Fetching case_transform 0.2
#16 23.64 Fetching factory_bot 6.4.6
#16 23.64 Fetching rubocop-rails 2.24.1
#16 23.64 Fetching shoulda-matchers 6.2.0
#16 23.76 Installing webmock 3.23.0
#16 23.83 Installing globalid 1.2.1
#16 23.84 Fetching activejob 7.1.3.2
#16 23.86 Installing case_transform 0.2
#16 23.88 Installing factory_bot 6.4.6
#16 23.92 Installing rails-dom-testing 2.2.0
#16 23.93 Installing rubocop-rails 2.24.1
#16 23.94 Fetching actionview 7.1.3.2
#16 23.98 Installing activemodel 7.1.3.2
#16 24.00 Installing shoulda-matchers 6.2.0
#16 24.04 Installing activejob 7.1.3.2
#16 24.15 Fetching activerecord 7.1.3.2
#16 24.15 Fetching activemodel-serializers-xml 1.0.2
#16 24.23 Installing actionview 7.1.3.2
#16 24.28 Fetching actionpack 7.1.3.2
#16 24.28 Fetching better_html 2.1.1
#16 24.32 Installing activemodel-serializers-xml 1.0.2
#16 24.49 Installing better_html 2.1.1 with native extensions
#16 24.53 Installing actionpack 7.1.3.2
#16 24.58 Installing activerecord 7.1.3.2
#16 24.67 Fetching actioncable 7.1.3.2
#16 24.67 Fetching actionmailer 7.1.3.2
#16 24.67 Fetching active_model_serializers 0.10.14
#16 24.67 Fetching draper 4.0.2
#16 24.67 Fetching railties 7.1.3.2
#16 24.67 Fetching simple_form 5.3.0
#16 24.86 Fetching activestorage 7.1.3.2
#16 24.89 Installing actionmailer 7.1.3.2
#16 24.91 Installing actioncable 7.1.3.2
#16 24.94 Installing active_model_serializers 0.10.14
#16 24.96 Installing draper 4.0.2
#16 24.97 Installing simple_form 5.3.0
#16 25.03 Installing railties 7.1.3.2
#16 25.08 Installing activestorage 7.1.3.2
#16 25.22 Fetching actionmailbox 7.1.3.2
#16 25.22 Fetching actiontext 7.1.3.2
#16 25.30 Fetching factory_bot_rails 6.4.3
#16 25.30 Fetching responders 3.1.1
#16 25.30 Fetching webpacker 6.0.0.rc.6
#16 25.38 Fetching rubocop-erb 0.4.0
#16 25.41 Installing actionmailbox 7.1.3.2
#16 25.45 Installing actiontext 7.1.3.2
#16 25.46 Installing factory_bot_rails 6.4.3
#16 25.48 Fetching rails 7.1.3.2
#16 25.51 Installing responders 3.1.1
#16 25.55 Installing rubocop-erb 0.4.0
#16 25.57 Installing webpacker 6.0.0.rc.6
#16 25.63 Installing rails 7.1.3.2
#16 27.61 Fetching libddwaf 1.14.0.0.0 (x86_64-linux)
#16 27.61 Fetching rb-inotify 0.10.1
#16 27.61 Fetching ruby-vips 2.2.1
#16 27.79 Installing rb-inotify 0.10.1
#16 27.80 Fetching listen 3.9.0
#16 27.83 Installing ruby-vips 2.2.1
#16 27.94 Installing libddwaf 1.14.0.0.0 (x86_64-linux)
#16 27.96 Installing listen 3.9.0
#16 27.99 Fetching datadog 2.0.0.beta2
#16 28.30 Installing datadog 2.0.0.beta2 with native extensions
#16 35.85 Fetching ruby-lsp 0.17.16
#16 36.08 Installing ruby-lsp 0.17.16
#16 36.10 Fetching ruby-lsp-rails 0.3.13
#16 36.25 Installing ruby-lsp-rails 0.3.13
#16 82.68 Bundle complete! 45 Gemfile dependencies, 148 gems now installed.
#16 82.68 Use `bundle info [gemname]` to see where a bundled gem is installed.
#16 DONE 83.2s

#25 [e621 stage-2 12/14] COPY --from=ruby-builder /usr/local/bundle /usr/local/bundle
#25 DONE 3.0s

#26 [e621 stage-2 13/14] RUN addgroup --gid 1000 e621ng &&   adduser -S --shell /bin/sh --uid 1000 e621ng &&   addgroup e621ng wheel &&   echo "e621ng ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers
#26 DONE 0.5s

#27 [e621 stage-2 14/14] RUN git config --global --add safe.directory $(pwd)
#27 DONE 0.4s

#28 [e621] exporting to image
#28 exporting layers
#28 exporting layers 1.3s done
#28 writing image sha256:ad64fd366d6dedb88d8db615a3c7286d3d81d20cc02382387496490d4c1f637a done
#28 naming to docker.io/library/e621 done
#28 DONE 1.3s

== Copying sample files ==
== Creating opensearch indices ==
